{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","aria-checked","htmlFor","defaultProps","aboutText","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","cpyText","document","getElementById","select","navigator","clipboard","writeText","split","join","joinedText","reverse","length","prototype","PropTypes","string","isRequired","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.d73d7806.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#/\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n              \r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#/\">Home</a>\r\n   \r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\r\n              </li>\r\n      \r\n            </ul>\r\n            {/* <form className=\"d-flex\" role=\"search\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n          {/* <div className = {`form-check form-switch text-${props.textMode}`}> */}\r\n          <div className = {`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n            \r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\"  role=\"switch\" aria-checked=\"false\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes ={\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps ={\r\n    title: \"Set title here\",\r\n    aboutText: \"Set about us here\"\r\n}","import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = () =>{\r\n        //console.log(\"Uppercase was clicked\" + text);\r\n        //setText(\"You have clicked on handleUpClick\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Uppercase is executed.\",\"success\");\r\n\r\n    }\r\n\r\n    const handleLowClick = () =>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Lowercase is executed.\",\"success\");\r\n\r\n    }\r\n\r\n    const handleClearClick = () =>{\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Clear text is executed.\",\"success\");\r\n\r\n    }\r\n\r\n    const handleCopy =()=>{\r\n        let cpyText = document.getElementById(\"myBox\");\r\n        cpyText.select();\r\n        navigator.clipboard.writeText(cpyText.value);\r\n        props.showAlert(\"Copied to clipboard\",\"success\");\r\n\r\n    }\r\n\r\n    const handleExtraSpaces =()=>{\r\n        // eslint-disable-next-line\r\n        let newText = text.split(/[  ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces are executed.\",\"success\");\r\n\r\n    }\r\n    \r\n\r\n\r\n\r\n    const handleInverseClick = () =>{\r\n        let splittedText = text.split(\" \");\r\n        let revresedText = splittedText.reverse();\r\n        let joinedText = revresedText.join(\" \");\r\n        setText(joinedText);\r\n        props.showAlert(\"Inverse of text is executed.\",\"success\");\r\n\r\n    }\r\n\r\n    const handleOnChange = (event) =>{\r\n        //console.log(\"Onchange\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    // const [text,setText] = useState(\"Enter text here\");\r\n    const [text,setText] = useState(\"\");\r\n    // text = \"New text\"; //Wrong way to set text\r\n    //setText(\"New text\");//Right way to set text\r\n    return (\r\n    <>\r\n    <div className=\"container\" style={{color:props.mode===\"dark\"?\"white\":\"black\"}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value ={text}  onChange={handleOnChange} style = {{backgroundColor : props.mode===\"dark\"?\"grey\":\"white\", color:props.mode===\"dark\"?\"white\":\"dark\"}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleLowClick}>Convert to LoweCase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear text</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy text</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleInverseClick}>Inverse text</button>\r\n    </div>\r\n\r\n    <div className=\"container my-3\" style={{color:props.mode===\"dark\"?\"white\":\"black\"}}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something in the above space to preview it here\"}</p>\r\n    </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nTextForm.prototype = {\r\n    heading: PropTypes.string.isRequired\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n  return (\r\n     props.alert && <div>\r\n         <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n              <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n              {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n          </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert","//import logo from './logo.svg';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\n// import {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";  \n// import { BrowserRouter as Router, Switch, Route} from \"react-router-dom\"; \n\nimport React from 'react'\n\nfunction App() {\n\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  // const [textMode, settextMode] = useState(\"dark\");\n\n  const showAlert = (message, type) =>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () =>{\n    if (mode === \"dark\"){\n      setMode(\"light\");\n      // settextMode(\"dark\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled.\",\"success\")\n      document.title = \"TextUtils - LightMode\"\n    }\n    else{\n      setMode (\"dark\");\n      // settextMode(\"light\");\n      document.body.style.backgroundColor = \"grey\";\n      showAlert(\"Dark mode has been enabled.\",\"success\");\n      document.title = \"TextUtils - DarkMode\";\n\n      // setInterval(() => {\n      //   document.title = \"TextUtils is amazing\";\n      // }, 2000);\n\n      // setInterval(() => {\n      //   document.title = \"Install TextUtils\";\n      // }, 1500);\n\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n        <TextForm heading=\"Enter the text to analyse below\" mode={mode} showAlert={showAlert} />\n        </div>\n          {/* <Switch> */}\n\n            {/* <Route exact path=\"/\"> */}\n              {/* <TextForm heading=\"Enter the text to analyse below\" mode={mode} showAlert={showAlert} /> */}\n            {/* </Route> */}\n\n            {/* <Route exact path=\"/about\">\n              <About />\n            </Route> */}\n\n          {/* </Switch> */}\n\n          {/* <About/> */}\n        {/* </div> */}\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}